<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.12/sweetalert2.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.12/sweetalert2.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }
        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            min-height: 100vh;
            background: #f5f5f5;
        }
        .navbar {
            width: 100%;
            padding: 15px 5%;
            color: white;
            text-align: center;
            font-size: 20px;
            font-weight: bold;
            background-color: #222831;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .back-btn, .logout-btn {
            padding: 8px 15px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            color: white;
            text-decoration: none;
            background-color: #222831;
            border: none;
            transition: all 0.3s ease;
        }
        .back-btn:hover, .logout-btn:hover {
            background-color: #666;;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        .main-content {
            width: 100%;
            max-width: 1200px;
            padding: 20px;
            margin: 20px 0;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .container {
            background: white;
            width: 100%;
            max-width: 600px;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            text-align: left;
            margin-bottom: 20px;
        }
        .section-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 20px;
            border-bottom: 2px solid #f0f0f0;
            padding-bottom: 10px;
            width: 100%;
            max-width: 600px;
        }
        .section-header h2 {
            color: #222831;
            margin: 0;
        }
        .info-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 15px;
        }
        .info-item {
            margin-bottom: 5px;
        }
        .info-label {
            font-weight: bold;
            color: #555;
            margin-right: 10px;
        }
        .info-value {
            color: #222831;
        }
        h2, h3 {
            color: #222831;
            margin-bottom: 15px;
        }
        .btn {
            padding: 12px;
            background-color: #FFD700;
            color: #222831;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: bold;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }
        .btn:hover {
            background-color: #666;;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        .footer {
            width: 100%;
            background-color: #222831;
            color: white;
            text-align: center;
            padding: 20px 5%;
            margin-top: auto;
        }
        .footer-links {
            margin-top: 10px;
        }
        .footer-links a {
            color: #FFD700;
            margin: 0 10px;
            text-decoration: none;
            transition: color 0.3s ease;
        }
        .footer-links a:hover {
            color: #FFA500;
            text-decoration: underline;
        }
        
        /* Edit button styles */
        .edit-btn {
            background-color: #FFD700;
            color: #222831;
            border: none;
            border-radius: 5px;
            padding: 6px 12px;
            cursor: pointer;
            font-size: 14px;
            font-weight: bold;
            transition: all 0.3s ease;
        }
        .edit-btn:hover {
            background-color: #FFA500;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        
        /* Profile container styles */
        .profile-container {
            background: white;
            width: 100%;
            max-width: 600px;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }
        
        /* Profile view styles */
        #profile-view {
            width: 100%;
        }
        #profile-view p {
            margin-bottom: 15px;
            font-size: 16px;
        }
        
        /* Profile edit styles */
        #profile-edit {
            width: 100%;
        }
        .profile-form-group {
            margin-bottom: 15px;
        }
        .profile-form-group label {
            display: block;
            margin-bottom: 5px;
            color: #555;
            font-weight: bold;
        }
        .profile-form-control {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }
        .profile-form-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 20px;
        }
        
        /* Address container styles */
        .address-container {
            background: white;
            width: 100%;
            max-width: 600px;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }
        
        /* Address list and form styles */
        .address-list {
            margin-top: 15px;
            width: 100%;
        }
        .address-item {
            background-color: #f8f9fa;
            border-radius: 5px;
            padding: 15px;
            margin-bottom: 10px;
            position: relative;
        }
        .address-item-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }
        .address-type {
            font-weight: bold;
            color: #222831;
        }
        .address-actions {
            display: flex;
            gap: 5px;
        }
        .action-btn {
            background: none;
            border: none;
            cursor: pointer;
            color: #555;
            font-size: 16px;
            transition: color 0.3s ease;
        }
        .action-btn:hover {
            color: #FFD700;
        }
        .address-details {
            color: #444;
        }
        .add-address-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            background-color: #E8F0FE;
            color: #1A73E8;
            border: 2px dashed #1A73E8;
            border-radius: 5px;
            padding: 12px;
            cursor: pointer;
            width: 100%;
            transition: all 0.3s ease;
            font-weight: bold;
            margin-top: 15px;
        }
        .add-address-btn:hover {
            background-color: #D2E3FC;
            transform: translateY(-2px);
        }
        
        /* Address form styles */
        .address-form {
            display: none;
            background-color: #f8f9fa;
            border-radius: 5px;
            padding: 20px;
            margin-top: 15px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: #555;
            font-weight: bold;
        }
        .form-control {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }
        .form-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 15px;
        }
        .cancel-btn {
            background-color: #f1f1f1;
            color: #333;
            border: none;
            border-radius: 5px;
            padding: 8px 15px;
            cursor: pointer;
            font-weight: bold;
        }
        .save-btn {
            background-color: #FFD700;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 8px 15px;
            cursor: pointer;
            font-weight: bold;
        }
        .save-btn:hover {
            background-color:#e5e5e5;
            color: black;

            ;
        }
        .cancel-btn:hover {
            background-color: #e5e5e5;
        }
        
        /* Responsive adjustments */
        @media (max-width: 768px) {
            .navbar {
                padding: 15px 3%;
                font-size: 18px;
            }
            .back-btn, .logout-btn {
                padding: 6px 12px;
                font-size: 14px;
            }
            .container, .profile-container, .address-container {
                padding: 20px;
                max-width: 95%;
            }
            .profile-form-buttons, .form-buttons {
                flex-direction: column;
            }
            .profile-form-buttons button, .form-buttons button {
                width: 100%;
                margin-bottom: 10px;
            }
        }
        
        @media (max-width: 480px) {
            .navbar {
                padding: 12px 2%;
                font-size: 16px;
            }
            .container, .profile-container, .address-container {
                padding: 15px;
            }
            .footer {
                padding: 15px 2%;
            }
            .footer-links a {
                display: block;
                margin: 8px 0;
            }
            .section-header {
                flex-direction: column;
                align-items: flex-start;
            }
            .section-header h2 {
                margin-bottom: 10px;
            }
        }
    </style>
</head>
<body>

    <div class="navbar">
        <a href="/user/home" class="back-btn">&larr; Back</a>
        <span>User Profile</span>
        <button class="logout-btn" onclick="confirmLogout()">Logout</button>
    </div>

    <div class="main-content">
        <!-- Profile Section -->
        <div class="section-header">
            <h2>Personal Information</h2>
            <button class="edit-btn" onclick="toggleProfileEdit()">
                <i class="fas fa-edit"></i> Edit Profile
            </button>
        </div>
        
        <div class="profile-container">
            <!-- Display Profile -->
            <div id="profile-view">
                <p><strong>Name:</strong> <span id="display-name"><%= user.name %></span></p>
                <p><strong>Phone:</strong> <span id="display-phone"><%= user.phone %></span></p>
                <p><strong>Email:</strong> <span id="display-email"><%= user.email %></span></p>
            </div>

            <!-- Edit Profile -->
            <div id="profile-edit" style="display:none;">
                <div class="profile-form-group">
                    <label for="name">Name</label>
                    <input type="text" id="name" class="profile-form-control" value="<%= user.name %>">
                </div>
                <div class="profile-form-group">
                    <label for="phone">Phone</label>
                    <input type="text" id="phone" class="profile-form-control" value="<%= user.phone %>">
                </div>
                <div class="profile-form-group">
                    <label for="email">Email</label>
                    <input type="email" id="email" class="profile-form-control" value="<%= user.email %>">
                </div>
                <div class="profile-form-buttons">
                    <button class="cancel-btn" onclick="toggleProfileEdit()">Cancel</button>
                    <button class="save-btn" onclick="saveProfile()">Save Changes</button>
                </div>
            </div>
        </div>

        <!-- Address Section -->
        <div class="section-header">
            <h2>My Addresses</h2>
        </div>
        
        <div class="address-container">
            <div id="address-list" class="address-list">
                <% user.addresses.forEach(function(address) { %>
                    <div class="address-item">
                        <div class="address-item-header">
                            <span class="address-type"><%= address.type %></span>
                            <div class="address-actions">
                                <button class="action-btn" onclick="editAddress('<%= address._id %>', '<%= address.type %>', '<%= address.street %>', '<%= address.city %>', '<%= address.state %>', '<%= address.zip %>', '<%= address.country %>')">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="action-btn" onclick="deleteAddress('<%= address._id %>')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                        <div class="address-details">
                            <%= address.street %>, <%= address.city %>, <%= address.state %> <%= address.zip %>, <%= address.country %>
                        </div>
                    </div>
                <% }) %>
            </div>
            
            <button class="add-address-btn" onclick="showAddressForm()">
                <i class="fas fa-plus"></i> Add New Address
            </button>
            
            <!-- Address Form -->
            <div id="address-form" class="address-form">
                <input type="hidden" id="address-id">
                <div class="form-group">
                    <label for="address-type">Address Type</label>
                    <select id="address-type" class="form-control">
                        <option value="Home">Home</option>
                        <option value="Work">Work</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="street">Street Address</label>
                    <input type="text" id="street" class="form-control" placeholder="Street">
                </div>
                <div class="form-group">
                    <label for="city">City</label>
                    <input type="text" id="city" class="form-control" placeholder="City">
                </div>
                <div class="form-group">
                    <label for="state">State/Province</label>
                    <input type="text" id="state" class="form-control" placeholder="State">
                </div>
                <div class="form-group">
                    <label for="zip">ZIP/Postal Code</label>
                    <input type="text" id="zip" class="form-control" placeholder="ZIP">
                </div>
                <div class="form-group">
                    <label for="country">Country</label>
                    <input type="text" id="country" class="form-control" placeholder="Country">
                </div>
                <div class="form-buttons">
                    <button class="cancel-btn" onclick="hideAddressForm()">Cancel</button>
                    <button class="save-btn" onclick="saveAddress()">Save Address</button>
                </div>
            </div>
        </div>
    </div>

    <div class="footer">
        <p>&copy; 2025 Your Company. All rights reserved.</p>
        <div class="footer-links">
            <a href="/privacy">Privacy Policy</a>
            <a href="/terms">Terms of Service</a>
            <a href="/contact">Contact Us</a>
        </div>
    </div>

    <script>
        function toggleProfileEdit() {
            document.getElementById('profile-view').style.display = document.getElementById('profile-view').style.display === 'none' ? 'block' : 'none';
            document.getElementById('profile-edit').style.display = document.getElementById('profile-edit').style.display === 'none' ? 'block' : 'none';
        }

        function saveProfile() {
            fetch('/user/profile/update', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    name: document.getElementById('name').value,
                    phone: document.getElementById('phone').value,
                    email: document.getElementById('email').value
                })
            }).then(response => response.json()).then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Profile updated successfully!',
                        timer: 1500
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Failed to update profile'
                    });
                }
            }).catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to update profile. Please try again.'
                });
            });
        }

        // Show/hide address form
        function showAddressForm() {
            document.getElementById('address-form').style.display = 'block';
            // Clear the form
            document.getElementById('address-id').value = '';
            document.getElementById('address-type').value = 'Home';
            document.getElementById('street').value = '';
            document.getElementById('city').value = '';
            document.getElementById('state').value = '';
            document.getElementById('zip').value = '';
            document.getElementById('country').value = '';
        }

        function hideAddressForm() {
            document.getElementById('address-form').style.display = 'none';
        }

        // Edit address - populate form with existing data
        function editAddress(id, type, street, city, state, zip, country) {
            document.getElementById('address-id').value = id;
            document.getElementById('address-type').value = type;
            document.getElementById('street').value = street;
            document.getElementById('city').value = city;
            document.getElementById('state').value = state;
            document.getElementById('zip').value = zip;
            document.getElementById('country').value = country;
            
            document.getElementById('address-form').style.display = 'block';
        }

        // Save address
        function saveAddress() {
    let addressId = document.getElementById('address-id').value;
    let addressData = {
        type: document.getElementById('address-type').value,
        street: document.getElementById('street').value,
        city: document.getElementById('city').value,
        state: document.getElementById('state').value,
        zip: document.getElementById('zip').value,
        country: document.getElementById('country').value
    };

    if (addressId) {
        addressData.id = addressId; // Only include ID if updating
    }

    fetch('/user/profile/address', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(addressData)
    })
    .then(response => response.json())
    .then(data => {
        console.log("Server Response:", data);
        if (data.success) {
            Swal.fire({ icon: 'success', title: 'Success', text: data.message, timer: 1500 }).then(() => {
                location.reload();
            });
        } else {
            Swal.fire({ icon: 'error', title: 'Error', text: data.message });
        }
    })
    .catch(error => {
        console.error('Fetch Error:', error);
        Swal.fire({ icon: 'error', title: 'Error', text: 'Failed to save address. Please try again.' });
    });
}


 // Delete address with confirmation
        function deleteAddress(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "This address will be permanently deleted!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch('/user/profile/address/delete', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ id })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Deleted!',
                                text: data.message,
                                timer: 1500
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: data.message
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Failed to delete address. Please try again.'
                        });
                    });
                }
            });
        }



// Confirm logout function

function confirmLogout() {
    Swal.fire({
        title: 'Are you sure?',
        text: "You will be logged out of your account",
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, logout'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/user/logout', { method: 'POST' })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.href = '/user/home'; // Redirect to home page after logout
                } else {
                    Swal.fire({ icon: 'error', title: 'Error', text: 'Logout failed!' });
                }
            })
            .catch(error => {
                console.error('Logout Error:', error);
                Swal.fire({ icon: 'error', title: 'Error', text: 'Something went wrong!' });
            });
        }
    });
}


    </script>
</body>
</html>