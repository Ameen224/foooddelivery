<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Signup & Login</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }
        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            height: 100vh;
            background: white;
        }
        .navbar {
            width: 100%;
            padding: 15px;
            color: white;
            text-align: center;
            font-size: 20px;
            font-weight: bold;
            background-color: #222831;
        }
        .back-btn {
            position: absolute;
            left: 20px;
            top: 15px;
            padding: 8px 15px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            color: white;
            text-decoration: none;
            background-color: #222831;
        }
        .container {
            background: white;
            width: 400px;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            text-align: center;
            margin-top: 50px;
        }
        h2 {
            margin-bottom: 20px;
            color: #000;
        }
        .form-group {
            margin-bottom: 15px;
            text-align: left;
        }
        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: #000;
        }
        .form-group input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
        }
        button {
            width: 100%;
            padding: 12px;
            background-color: #FFD700;
            color: #000;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            transition: 0.3s;
            font-weight: bold;
        }
        button:hover {
            background-color: #FFA500;
        }
        .switch-form {
            margin-top: 15px;
        }
        .switch-form a {
            color: #FFD700;
            cursor: pointer;
        }
        .signup-container { display: none; }
        .otp-container { display: none; }
        
        /* OTP Input Styles */
        .otp-inputs {
            display: flex;
            justify-content: space-between;
            margin: 20px 0;
        }
        .otp-input {
            width: 50px;
            height: 55px;
            text-align: center;
            font-size: 24px;
            font-weight: bold;
        }
        .resend-link {
            color: #FFD700;
            text-decoration: underline;
            cursor: pointer;
            margin-top: 15px;
            display: inline-block;
        }
        .timer {
            margin-top: 10px;
            font-size: 14px;
            color: #666;
        }
    </style>
</head>
<body>
    <div class="navbar">Signup & Login</div>
    <a  href="/user/home"  class="back-btn">&larr; Back</a> 
    <div class="container">
        <div id="login-form">
            <h2>Login</h2>
            <form onsubmit="handleLogin(event)">
                <div class="form-group">
                    <label>Email or Phone</label>
                    <input type="text" id="login-identifier" required>
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <input type="password" id="login-password" required>
                </div>
                <button type="submit">Login</button>
            </form>
            <div class="switch-form">
                <p>Don't have an account? <a onclick="switchForm('signup')">Sign up</a></p>
            </div>
        </div>
        
        <div id="signup-form" class="signup-container">
            <h2>Sign Up</h2>
            <form onsubmit="handleSignup(event)">
                <div class="form-group">
                    <label>Full Name</label>
                    <input type="text" id="name" required>
                </div>
                <div class="form-group">
                    <label>Email</label>
                    <input type="email" id="signup-email" required>
                </div>
                <div class="form-group">
                    <label>Phone Number</label>
                    <input type="tel" id="signup-phone">
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <input type="password" id="signup-password" required>
                </div>
                <div class="form-group">
                    <label>Confirm Password</label>
                    <input type="password" id="confirm-password" required>
                </div>
                <button type="submit">Sign Up</button>
            </form>
            <div class="switch-form">
                <p>Already have an account? <a onclick="switchForm('login')">Login</a></p>
            </div>
        </div>
        
        <div id="otp-form" class="otp-container">
            <h2>Email Verification</h2>
            <p>We've sent a verification code to <span id="user-email" style="font-weight: bold;"></span></p>
            
            <form onsubmit="verifyOTP(event)">
                <div class="form-group">
                    <label>Enter 6-digit OTP</label>
                    <div class="otp-inputs">
                        <input type="text" class="otp-input" maxlength="1" id="otp-1" onkeyup="moveToNext(this, 'otp-2')" required>
                        <input type="text" class="otp-input" maxlength="1" id="otp-2" onkeyup="moveToNext(this, 'otp-3')" required>
                        <input type="text" class="otp-input" maxlength="1" id="otp-3" onkeyup="moveToNext(this, 'otp-4')" required>
                        <input type="text" class="otp-input" maxlength="1" id="otp-4" onkeyup="moveToNext(this, 'otp-5')" required>
                        <input type="text" class="otp-input" maxlength="1" id="otp-5" onkeyup="moveToNext(this, 'otp-6')" required>
                        <input type="text" class="otp-input" maxlength="1" id="otp-6" required>
                    </div>
                </div>
                <div class="timer" id="otp-timer">Resend OTP in <span id="countdown">01:30</span></div>
                <button type="submit">Verify OTP</button>
            </form>
            
            <div>
                <a class="resend-link" id="resend-btn" style="display: none;" onclick="resendOTP()">Resend OTP</a>
            </div>
            
            <div class="switch-form">
                <p>Changed your mind? <a onclick="switchForm('login')">Back to Login</a></p>
            </div>
        </div>
    </div>

    <script>
        // Current email for OTP verification
        let currentEmail = '';
        let countdownTimer;
        
        function switchForm(form) {
            document.getElementById('login-form').style.display = 'none';
            document.getElementById('signup-form').style.display = 'none';
            document.getElementById('otp-form').style.display = 'none';
            
            if (form === 'login') {
                document.getElementById('login-form').style.display = 'block';
            } else if (form === 'signup') {
                document.getElementById('signup-form').style.display = 'block';
            } else if (form === 'otp') {
                document.getElementById('otp-form').style.display = 'block';
                startCountdown();
            }
        }
        
        function moveToNext(currentInput, nextInputId) {
            if (currentInput.value.length >= currentInput.maxLength) {
                document.getElementById(nextInputId)?.focus();
            }
        }
        
        function startCountdown() {
            let timeLeft = 90; // 1:30 in seconds
            document.getElementById('resend-btn').style.display = 'none';
            document.getElementById('otp-timer').style.display = 'block';
            
            if (countdownTimer) {
                clearInterval(countdownTimer);
            }
            
            countdownTimer = setInterval(function() {
                const minutes = Math.floor(timeLeft / 60);
                let seconds = timeLeft % 60;
                seconds = seconds < 10 ? '0' + seconds : seconds;
                
                document.getElementById('countdown').textContent = minutes + ':' + seconds;
                
                if (timeLeft <= 0) {
                    clearInterval(countdownTimer);
                    document.getElementById('otp-timer').style.display = 'none';
                    document.getElementById('resend-btn').style.display = 'inline-block';
                }
                timeLeft--;
            }, 1000);
        }
        
        async function handleLogin(event) {
            event.preventDefault();
            const identifier = document.getElementById('login-identifier').value.trim();
            const password = document.getElementById('login-password').value;

            if (!identifier || !password) {
                Swal.fire('Error', 'Please enter your email/phone and password.', 'error');
                return;
            }

            try {
                const response = await fetch('/user/login', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ identifier, password })
                });

                const data = await response.json();

                if (!response.ok) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Login Failed',
                        text: data.message || 'Invalid credentials!'
                    });
                } else {
                    // Store user details in localStorage (or sessionStorage)
                    localStorage.setItem('user', JSON.stringify(data.user));

                    Swal.fire({
                        icon: 'success',
                        title: 'Login Successful',
                        text: 'Redirecting...',
                        timer: 2000,
                        showConfirmButton: false
                    });

                    setTimeout(() => {
                        window.location.href = '/user/profile';
                    }, 2000);
                }
            } catch (error) {
                Swal.fire('Error', 'Server error! Please try again later.', 'error');
            }
        }

        async function handleSignup(event) {
            event.preventDefault();
            const name = document.getElementById('name').value;
            const email = document.getElementById('signup-email').value;
            const phone = document.getElementById('signup-phone').value;
            const password = document.getElementById('signup-password').value;
            const confirmPassword = document.getElementById('confirm-password').value;

            if (password !== confirmPassword) {
                Swal.fire('Error', 'Passwords do not match!', 'error');
                return;
            }

            try {
                const response = await fetch('/user/signup', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ name, email, phone, password })
                });
                const data = await response.json();

                if (!response.ok) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Signup Failed',
                        text: data.message
                    });
                } else {
                    // Store email for OTP verification
                    currentEmail = email;
                    document.getElementById('user-email').textContent = email;
                    
                    Swal.fire({
                        icon: 'success',
                        title: 'OTP Sent',
                        text: 'Please check your email for the verification code',
                        timer: 2000,
                        showConfirmButton: false
                    });
                    
                    setTimeout(() => {
                        switchForm('otp');
                    }, 2000);
                }
            } catch (error) {
                Swal.fire('Error', 'Something went wrong. Try again.', 'error');
            }
        }
        
        async function verifyOTP(event) {
            event.preventDefault();
            
            // Collect OTP digits
            const otp = [1, 2, 3, 4, 5, 6]
                .map(num => document.getElementById(`otp-${num}`).value)
                .join('');
                
            if (otp.length !== 6) {
                Swal.fire('Error', 'Please enter all 6 digits of the OTP.', 'error');
                return;
            }
            
            try {
                const response = await fetch('/user/verify-otp', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email: currentEmail, otp })
                });
                
                const data = await response.json();
                
                if (!response.ok) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Verification Failed',
                        text: data.message
                    });
                } else {
                    Swal.fire({
                        icon: 'success',
                        title: 'Signup Successful',
                        text: 'Your account has been verified! Redirecting to login...',
                        timer: 2000,
                        showConfirmButton: false
                    });
                    
                    setTimeout(() => {
                        switchForm('login');
                    }, 2000);
                }
            } catch (error) {
                Swal.fire('Error', 'Server error! Please try again later.', 'error');
            }
        }
        
        async function resendOTP() {
            try {
                const response = await fetch('/user/resend-otp', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email: currentEmail })
                });
                
                const data = await response.json();
                
                if (!response.ok) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Failed to Resend OTP',
                        text: data.message
                    });
                } else {
                    Swal.fire({
                        icon: 'success',
                        title: 'OTP Resent',
                        text: 'Please check your email for the new verification code',
                        timer: 2000,
                        showConfirmButton: false
                    });
                    
                    startCountdown();
                }
            } catch (error) {
                Swal.fire('Error', 'Server error! Please try again later.', 'error');
            }
        }
    </script>
</body>
</html>