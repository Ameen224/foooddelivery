<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: #f8f9fa;
            color: #212529;
        }
        
        .navbar {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 1rem 2rem;
            background-color: #222831;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            z-index: 100;
            color: white;
            position: relative;
        }

        .nav-left {
            display: flex;
            align-items: center;
            flex-grow: 1;
        }

        .back-button {
            background: none;
            border: none;
            font-size: 1.2rem;
            color: #FFC107;
            cursor: pointer;
            display: flex;
            align-items: center;
            transition: color 0.2s;
        }

        .back-button:hover {
            color: #FFEB3B;
        }

        .nav-center {
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
        }

        .page-title {
            font-size: 1.4rem;
            font-weight: bold;
            text-align: center;
            color: white;
        }
        
        .container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }
        
        .cart-container {
            display: flex;
            flex-direction: column;
            gap: 2rem;
        }
        
        @media (min-width: 768px) {
            .cart-container {
                flex-direction: row;
            }
            
            .products-section {
                flex: 2;
            }
            
            .order-summary {
                flex: 1;
            }
        }
        
        .section-title {
            font-size: 1.3rem;
            font-weight: bold;
            margin-bottom: 1.5rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid #FFC107;
            color: #222831;
        }
        
        .cart-item {
            display: flex;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
            position: relative;
            transition: transform 0.2s, box-shadow 0.2s;
        }
        
        .cart-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        }
        
        .item-image {
            width: 120px;
            height: 120px;
            object-fit: cover;
            border-radius: 8px;
            background-color: #e9ecef;
        }
        
        .item-details {
            flex: 1;
            margin-left: 1.5rem;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }
        
        .item-name {
            font-weight: bold;
            font-size: 1.1rem;
            margin-bottom: 0.5rem;
            color: #222831;
        }
        
        .item-variant {
            color: #6c757d;
            margin-bottom: 0.5rem;
        }
        
        .item-price {
            color: #FFC107;
            font-weight: bold;
            font-size: 1.2rem;
        }
        
        .item-actions {
            display: flex;
            align-items: center;
            margin-top: 1rem;
        }
        
        .quantity-control {
            display: flex;
            align-items: center;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            overflow: hidden;
        }
        
        .quantity-btn {
            background: none;
            border: none;
            width: 35px;
            height: 35px;
            font-size: 1.1rem;
            cursor: pointer;
            background-color: #f8f9fa;
            color: #222831;
            transition: background-color 0.2s;
        }
        
        .quantity-btn:hover {
            background-color: #e9ecef;
        }
        
        .quantity-input {
            width: 45px;
            height: 35px;
            text-align: center;
            border: none;
            border-left: 1px solid #dee2e6;
            border-right: 1px solid #dee2e6;
        }
        
        .remove-btn {
            margin-left: 1rem;
            padding: 0.5rem 1rem;
            background-color: #222831;
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: background-color 0.2s;
            display: flex;
            align-items: center;
            gap: 6px;
        }
        
        .remove-btn:hover {
            background-color: #393e46;
        }
        
        .trash-icon {
            width: 16px;
            height: 16px;
        }
        
        .order-summary {
            background-color: #ffffff;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
            height: fit-content;
        }
        
        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
            font-size: 1.05rem;
        }
        
        .summary-total {
            display: flex;
            justify-content: space-between;
            margin-top: 1.5rem;
            padding-top: 1.5rem;
            border-top: 2px solid #FFC107;
            font-weight: bold;
            font-size: 1.3rem;
            color: #222831;
        }
        
        .checkout-btn {
            width: 100%;
            padding: 1rem;
            background-color: #FFC107;
            color: #222831;
            border: none;
            border-radius: 8px;
            font-size: 1.1rem;
            font-weight: bold;
            cursor: pointer;
            margin-top: 2rem;
            transition: background-color 0.2s, transform 0.2s;
        }
        
        .checkout-btn:hover {
            background-color: #FFEB3B;
            transform: translateY(-2px);
        }
        
        .empty-cart {
            text-align: center;
            padding: 3rem;
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
        }
        
        .empty-cart h3 {
            font-size: 1.5rem;
            color: #222831;
            margin-bottom: 1rem;
        }
        
        .empty-cart p {
            color: #6c757d;
            margin-bottom: 2rem;
        }
        
        .continue-shopping {
            display: inline-block;
            padding: 0.75rem 1.5rem;
            background-color: #FFC107;
            color: #222831;
            text-decoration: none;
            border-radius: 8px;
            font-weight: bold;
            transition: background-color 0.2s;
        }
        
        .continue-shopping:hover {
            background-color: #FFEB3B;
        }

        /* Coupon styles */
        .coupon-section {
            margin-bottom: 1.5rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid #e9ecef;
        }

        .coupon-toggle {
            background: none;
            border: none;
            color: #FFC107;
            font-weight: bold;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0;
            margin-bottom: 1rem;
        }

        .coupon-toggle:hover {
            color: #FFEB3B;
        }

        .coupon-content {
            display: none;
        }

        .coupon-form {
            display: flex;
            margin-bottom: 1rem;
        }

        .coupon-input {
            flex: 1;
            padding: 0.75rem;
            border: 1px solid #dee2e6;
            border-radius: 6px 0 0 6px;
            font-size: 1rem;
        }

        .apply-coupon {
            padding: 0.75rem 1.5rem;
            background-color: #FFC107;
            color: #222831;
            border: none;
            border-radius: 0 6px 6px 0;
            font-weight: bold;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .apply-coupon:hover {
            background-color: #FFEB3B;
        }

        .active-coupons {
            margin-top: 1rem;
        }

        .coupon-tag {
            display: inline-flex;
            align-items: center;
            background-color: #f8f9fa;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            margin-right: 0.5rem;
            margin-bottom: 0.5rem;
            border: 1px solid #dee2e6;
        }

        .coupon-code {
            font-weight: bold;
            margin-right: 0.5rem;
        }

        .coupon-remove {
            background: none;
            border: none;
            color: #dc3545;
            cursor: pointer;
            font-size: 1.2rem;
            line-height: 1;
            padding: 0;
            margin-left: 0.5rem;
        }

        .discount-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
            font-size: 1.05rem;
            color: #28a745;
            font-weight: bold;
        }
    </style>
</head>
 <body>
   <div class="navbar">
        <div class="nav-left">
            <button class="back-button" onclick="window.history.back()">‚Üê Back</button>
        </div>
        <div class="nav-center">
            <div class="page-title">Shopping Cart</div>
        </div>
    </div>
    
    <div class="container">
        <div class="cart-container">
            <div class="products-section">
                <h2 class="section-title">Cart Items (<%= cart && cart.items ? cart.items.length : 0 %>)</h2>
                
                <% if (!cart || !cart.items || cart.items.length === 0) { %>
                    <div class="empty-cart">
                        <h3>Your cart is empty</h3>
                        <p>Add some products to your cart to see them here.</p>
                        <a href="/products" class="continue-shopping">Continue Shopping</a>
                    </div>
                <% } else { %>
                    <% cart.items.forEach(item => { %>
                        <div class="cart-item">
                            <img src="<%= item.image || '/img/placeholder.jpg' %>" alt="<%= item.name || 'Product' %>" class="item-image">
                            <div class="item-details">
                                <div>
                                    <div class="item-name"><%= item.name || 'Product' %></div>
                                    <% if (item.variant) { %>
                                        <div class="item-variant"><%= item.variant %></div>
                                    <% } %>
                               </div>
                                <div class="item-price">‚Çπ<%= (item.price || 0).toFixed(2) %></div>
                                <div class="item-actions">
                                    <div class="quantity-control">
                                        <button class="quantity-btn" onclick="updateQuantity('<%= item.id %>', <%= item.quantity - 1 %>)">-</button>
                                        <input type="text" class="quantity-input" value="<%= item.quantity || 1 %>" readonly>
                                        <button class="quantity-btn" onclick="updateQuantity('<%= item.id %>', <%= item.quantity + 1 %>)">+</button>
                                    </div>
                                    <button class="remove-btn" onclick="removeItem('<%= item.id %>')">
                                        <svg class="trash-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                            <polyline points="3 6 5 6 21 6"></polyline>
                                            <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>
                                        </svg>
                                        Remove
                                    </button>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                <% } %>
            </div>
            
            <div class="order-summary">
                <h2 class="section-title">Order Summary</h2>
                
                <% if (cart && cart.items && cart.items.length > 0) { %>
                    <!-- Coupon Section -->
                    <div class="coupon-section">
                        <button class="coupon-toggle" onclick="toggleCoupon()">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5z"/>
                                <path d="M2.5 4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5V4z"/>
                            </svg>
                            Add Coupon Code
                        </button>
                        <div id="couponContent" class="coupon-content">
                            <div class="coupon-form">
                                <input type="text" class="coupon-input" id="couponCode" placeholder="Enter coupon code">
                                <button class="apply-coupon" onclick="applyCoupon()">Apply</button>
                            </div>
                            
                            <% if (cart && cart.coupon && cart.coupon.code) { %>
                                <div class="active-coupons">
                                    <div class="coupon-tag">
                                        <span class="coupon-code"><%= cart.coupon.code %></span>
                                        <% if (cart.coupon.discount) { %>
                                            <% if (cart.coupon.type === 'percent') { %>
                                                <span><%= cart.coupon.discount %>% off</span>
                                            <% } else { %>
                                                <span>‚Çπ<%= cart.coupon.discount.toFixed(2) %> off</span>
                                            <% } %>
                                            <button class="coupon-remove" onclick="removeCoupon()">√ó</button>
                                        <% } %>                                        
                                    </div>
                                </div>
                            <% } %>
                        </div>
                    </div>
                <% } %>
                
                <div class="summary-row">
                    <span>Subtotal</span>
                    <span>‚Çπ<%= (cart && cart.subtotal ? cart.subtotal : 0).toFixed(2) %></span>
                </div>
                
                <% if (cart && cart.discount && cart.discount > 0) { %>
                    <div class="discount-row">
                        <span>Discount</span>
                        <span>-‚Çπ<%= cart.discount.toFixed(2) %></span>
                    </div>
                <% } %>
                
                <div class="summary-row">
                    <span>Shipping</span>
                    <span>‚Çπ<%= (cart && cart.shipping ? cart.shipping : 0).toFixed(2) %></span>
                </div>
                <div class="summary-row">
                    <span>Tax</span>
                    <span>‚Çπ<%= (cart && cart.tax ? cart.tax : 0).toFixed(2) %></span>
                </div>
                <div class="summary-total">
                    <span>Total</span>
                    <span>‚Çπ<%= (cart && cart.total ? cart.total : 0).toFixed(2) %></span>
                </div>
                <button class="checkout-btn" onclick="proceedToCheckout()" <%= (!cart || !cart.items || cart.items.length === 0) ? 'disabled' : '' %>>Proceed to Checkout</button>
            </div>
        </div>
    </div>

    <script>
        //function for updating the quantity
        function updateQuantity(itemId, newQuantity) {
            if (isNaN(newQuantity) || newQuantity < 1 || newQuantity > 100) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Invalid Quantity',
                    text: 'Please enter a valid quantity between 1 and 100.'
                });
                return;
            }

            fetch('/user/cart/update', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    itemId: itemId,
                    quantity: newQuantity
                })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Cart Updated!',
                        text: 'Item quantity has been updated.',
                        timer: 1500,
                        showConfirmButton: false
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Update Failed',
                        text: data.message || 'Unable to update item quantity.'
                    });
                }
            })
            .catch(error => {
                console.error('Error updating cart:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Something went wrong. Please try again.'
                });
            });
        }
// function for removing the item
        function removeItem(itemId) {
            if (!itemId) {
                console.error('Invalid item ID');
                return;
            }
            
            Swal.fire({
                title: 'Are you sure?',
                text: 'This item will be removed from your cart.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, remove it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch('/user/cart/remove', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            itemId: itemId
                        })
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Item Removed',
                                text: 'The item has been successfully removed from your cart.',
                                timer: 1500,
                                showConfirmButton: false
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Removal Failed',
                                text: data.message || 'Unable to remove item.'
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error removing item:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Something went wrong. Please try again.'
                        });
                    });
                }
            });
        }
// function for toggle the coupon
        function toggleCoupon() {
            const couponContent = document.getElementById('couponContent');
            if (couponContent) {
                couponContent.style.display = couponContent.style.display === 'block' ? 'none' : 'block';
            }
        }
// function for applying the coupon
function applyCoupon() {
    const couponCodeElement = document.getElementById('couponCode');
    const couponCode = couponCodeElement.value.trim();
    
    console.log("Attempting to apply coupon:", couponCode);
    
    fetch('/user/cart/apply-coupon', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            code: couponCode
        })
    })
    .then(response => response.json()) // Convert response to JSON
    .then(data => {
        console.log("Server Response:", data); // Log response to debug
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'coupon applied ',
                        text: 'applyed succecfully',
                        timer: 1500,
                        showConfirmButton: false
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'coupon Failed',
                        text: data.message || 'unable to apply coupon'
                    });
                }
            })
    .catch(error => {
        console.error('Error applying coupon:', error);
        // Error handling
    });
}
                                                                    

 // function for removing the coupon       
function removeCoupon() {
    Swal.fire({
        title: 'Remove Coupon?',
        text: 'This will remove the applied coupon from your cart.',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, remove it'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/user/cart/remove-coupon', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Coupon Removed',
                        text: 'Coupon has been removed from your cart.',
                        timer: 1500,
                        showConfirmButton: false
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Removal Failed',
                        text: data.message || 'Unable to remove coupon.'
                    });
                }
            })
            .catch(error => {
                console.error('Error removing coupon:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Something went wrong. Please try again.'
                });
            });
        }
    });
}


// function for the checkout
function proceedToCheckout() {
    // Check if cart is empty
    const cartItems = document.querySelectorAll('.cart-item');
    if (cartItems.length === 0) {
        Swal.fire({
            icon: 'warning',
            title: 'Empty Cart',
            text: 'Your cart is empty. Add some items before checking out.',
        });
        return;
    }

    Swal.fire({
        title: 'Proceed to Checkout?',
        text: 'Make sure your cart is ready before checking out.',
        icon: 'info',
        showCancelButton: true,
        confirmButtonColor: '#28a745',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, proceed'
    }).then((result) => {
        if (result.isConfirmed) {
            // Show loading state
            Swal.fire({
                title: 'Processing...',
                text: 'Please wait while we prepare your checkout.',
                allowOutsideClick: false,
                allowEscapeKey: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            // Navigate to checkout page
            window.location.href = '/user/checkout';
        }
    });
}

// Initialize - check if there's a coupon to show the section
document.addEventListener('DOMContentLoaded', function() {
    // Check if there's an applied coupon and show the coupon section
    const hasCoupon = <%= cart && cart.coupon ? 'true' : 'false' %>;
    if (hasCoupon) {
        const couponContent = document.getElementById('couponContent');
        if (couponContent) {
            couponContent.style.display = 'block';
        }
    }
    
    // Focus trap for accessibility in coupon form
    const couponInput = document.getElementById('couponCode');
    const applyButton = document.querySelector('.apply-coupon');
    
    if (couponInput && applyButton) {
        couponInput.addEventListener('keydown', function(event) {
            if (event.key === 'Enter') {
                event.preventDefault();
                applyCoupon();
            }
        });
    }
    
    
    // Add error handling for images
    const productImages = document.querySelectorAll('.item-image');
    productImages.forEach(img => {
        img.onerror = function() {
            this.src = '/img/placeholder.jpg';
            this.alt = 'Product image not available';
        };
    });
});
</script>
</body>
</html>